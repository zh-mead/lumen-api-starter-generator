<?php

namespace DummyNamespace;

use App\Http\Controllers\Controller;
use App\Http\Resources\DummyClassResource;
use Illuminate\Http\Request;
use App\Services\DummyClassService;

/**
* DummyClass
*/
class DummyClassController extends Controller
{
    /**
    * @var DummyClassService
    */
    private $service;

    /**
     * DummyClassController constructor.
     *
     * @param DummyClassService   $DummyLowercaseClassService
     */
    public function __construct(DummyClassService $service)
    {
        parent::__construct();
        $this->middleware('checkUserPermission');

        $this->service = $service;
    }

    /**
     * 列表
     * @param Request $request
     *
     * @return \Illuminate\Http\JsonResponse|\Illuminate\Http\Resources\Json\JsonResource
     * @throws \Prettus\Repository\Exceptions\RepositoryException
     */
    public function index(Request $request)
    {
        $lists = $this->service->handleList($request);
        return $this->response->success($lists);
    }

    /**
     * 新增
     * @param Request $request
     *
     * @return \Illuminate\Http\JsonResponse|\Illuminate\Http\Resources\Json\JsonResource
     * @throws \Prettus\Validator\Exceptions\ValidatorException
     */
    public function store(Request $request)
    {
        $data = $this->validateData($request, [
            'name' => 'required|string|max:200',
            'sort' => 'required|integer',
            'status' => 'required|integer',
        ], []);
        $model = $this->service->handleStore($data);
        return $this->response->created($model, '创建成功');
    }

    /**
     * 详情
     * @param  Request $request
     * @return \Illuminate\Http\JsonResponse|\Illuminate\Http\Resources\Json\JsonResource
     */
    public function show(Request $request)
    {
        $this->validate($request, ['id' => 'required|integer']);
        $model = $this->service->handleProfile($request->get('id'));
        return $this->response->success($model);
    }

    /**
     * 更新
     * @param Request $request
     *
     * @return \Illuminate\Http\JsonResponse|\Illuminate\Http\Resources\Json\JsonResource
     * @throws \Prettus\Validator\Exceptions\ValidatorException
     */
    public function update(Request $request)
    {
        $data = $this->validateData($request, [
            'id' => 'required|integer',
            'name' => 'required|string|max:200',
            'sort' => 'required|integer',
            'status' => 'required|integer',
        ], []);
        $model = $this->service->handleUpdate($data);
        return $this->response->success($model, '更新成功');
    }

    /**
     * 删除
     * @param  Request $request
     */
    public function destroy(Request $request)
    {
        $this->validate($request, ['id' => 'required|integer']);
        $re = $this->service->handleDelete($request->get('id'));
        if ($re) {
            return $this->response->ok('删除成功');
        }
        return $this->response->fail('删除失败');
    }

     /**
     * 批量删除
     * @param Request $request
     */
    public function batchDelete(Request $request)
    {
        $ids = $this->validateData($request, ['ids' => 'required|array']);
        $re = $this->service->handleBatchDelete($ids);
        if ($re) {
            return $this->response->ok('删除成功');
        }
        return $this->response->fail('删除失败');
    }

    /**
     * 选项
     * @must
     * @param Request $request
     */
    public function selectOptions(Request $request)
    {
        $lists = $this->service->handleSelectOptions($request);
        return $this->response->success($lists);
    }
}
